name: Test, Build, Deploy (Groep 5)

on:
  push:
    branches:
      - 'groep_5_b2d'
      - 'groep_5_b2d_test'

env:
  HOST: ${{ secrets.AZURE_VM_GROEP5_IP }}
  SERVER_USER: ${{ secrets.AZURE_VM_GROEP5_USERNAME }}
  SERVER_PASSWORD: ${{ secrets.AZURE_VM_GROEP5_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build program
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Slack Notification after Test
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSbqj9Ii13d6hx5a9kyLnC5A8A96LDSaSZv_w&s
          SLACK_USERNAME: Github (Frontend)
          SLACK_WEBHOOK: ${{ secrets.GROEP_5_SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Tests completed with status: ${{ job.status }}"

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build
      
      - name: Build FrontEnd artifacts
        run: | 
          mkdir FrontEnd
          cp -r .next public package.json FrontEnd/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: FrontEnd
          path: FrontEnd

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: FrontEnd
          path: FrontEnd
      
      - name: Reboot Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASSWORD }}
          script: |
            sudo reboot
            exit
      
      - name: Wait for server to reboot
        run: sleep 60

      - name: Clean Old Artifact
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASSWORD }}
          script: |
            sudo rm -rf /home/${{ env.SERVER_USER }}/FrontEnd
            
      - name: Deploy to Server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: FrontEnd
          remote: /home/${{ env.SERVER_USER }}/FrontEnd
          host: ${{ env.HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASSWORD }}

      - name: Install dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASSWORD }}
          script: |
            sudo apt update
            sudo apt install curl -y
            curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash - 
            sudo apt-get install -y nodejs
            cd /home/${{ env.SERVER_USER }}/FrontEnd
            sudo npm install
  
      - name: Restart Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASSWORD }}
          script: |
            ( cd /home/${{ env.SERVER_USER }}/FrontEnd ; nohup sudo npm run start -- -p 80 >frontend.log 2>&1 </dev/null & )

  slackNotification:
    needs: [test, deploy]
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSbqj9Ii13d6hx5a9kyLnC5A8A96LDSaSZv_w&s
          SLACK_USERNAME: Github (Frontend)
          SLACK_WEBHOOK: ${{ secrets.GROEP_5_SLACK_WEBHOOK }}
          SLACK_FOOTER: "http://${{ secrets.AZURE_VM_GROEP5_IP }}"
