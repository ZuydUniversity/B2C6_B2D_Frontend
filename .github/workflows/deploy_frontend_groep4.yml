name: Frontend CI

on:
  push:
    branches:
      - groep_4_B2D

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Build artifacts
        run: | 
          mkdir Frontend
          cp -r .next public package.json ansible Frontend/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Frontend
          path: Frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Frontend
          path: Frontend

      - name: Install Ansible on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST_GROEP4 }} 
          username: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}  
          password: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}
          script: |
               sudo apt update
               sudo apt install -y ansible
          
      - name: Reboot server
        uses: dawidd6/action-ansible-playbook@v2.1.2
        with:
          playbook: Frontend/ansible/reboot_services.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_INVENTORY: 'ansible/inventory'
          ANSIBLE_REMOTE_USER: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}
          ANSIBLE_REMOTE_PASS: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}

      - name: Clean Old Artefact
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST_GROEP4 }} 
          username: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}  
          password: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}
          script: |
            sudo rm -rf Frontend
            
      - name: Deploy to Server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: Frontend
          remote: Frontend
          host: ${{ secrets.AZURE_VM_HOST_GROEP4 }} 
          username: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}  
          password: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}

      - name: Run Ansible Playbook - Install Dependencies
        uses: dawidd6/action-ansible-playbook@v2.1.2
        with:
          playbook: Frontend/ansible/install_dependencies.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_INVENTORY: 'ansible/inventory'
          ANSIBLE_REMOTE_USER: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}
          ANSIBLE_REMOTE_PASS: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}
  
      - name: Run Ansible Playbook - Start Services
        uses: dawidd6/action-ansible-playbook@v2.1.2
        with:
          playbook: Frontend/ansible/start_services.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_INVENTORY: 'ansible/inventory'
          ANSIBLE_REMOTE_USER: ${{ secrets.AZURE_VM_USERNAME_GROEP4 }}
          ANSIBLE_REMOTE_PASS: ${{ secrets.AZURE_VM_PASSWORD_GROEP4 }}
              
      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Frontend build succeeded üéâ"}' ${{ secrets.GROEP_4_SLACK_WEBHOOK }}
          
      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Frontend build failed ‚ùå"}' ${{ secrets.GROEP_4_SLACK_WEBHOOK }}
